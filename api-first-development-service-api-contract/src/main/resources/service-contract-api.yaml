openapi: 3.0.3
info:
  title: API First Development
  description: API First Development
  version: 1.0.0
  contact:
    email: csabavadasz79@gmail.com
servers:
  - url: 'http://localhost:8080'
tags:
  - name: book
  - name: log

paths:
  /books:
    get:
      tags:
        - book
      summary: Render all books
      description: Show all books from database
      operationId: renderAllBooks
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookModel'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Book not found
        '405':
          description: Validation exception
    post:
      tags:
        - book
      summary: Add a new book to the store
      description: Add a new book to the store
      operationId: addBook
      requestBody:
        description: Create a new book in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBookModel'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookModel'
        '405':
          description: Invalid input
  /books/{bookId}:
    get:
      tags:
        - book
      summary: Find book by ID
      description: Returns a single book
      operationId: getBookById
      parameters:
        - name: bookId
          in: path
          description: ID of book to return
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookModel'
        '400':
          description: Invalid ID supplied
        '404':
          description: Book not found
    put:
      tags:
        - book
      summary: Update an existing book
      description: Update an existing book by Id
      operationId: updateBook
      parameters:
        - name: bookId
          in: path
          description: ID of book to return
          required: true
          schema:
            format: uuid
            type: string
      requestBody:
        description: Create a new book in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModifiedBookModel'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookModel'
        '400':
          description: Invalid ID supplied
        '404':
          description: Book not found
        '405':
          description: Validation exception
    delete:
      tags:
        - book
      summary: Deletes a book
      description: delete a book
      operationId: deleteBook
      parameters:
        - name: bookId
          in: path
          description: ID of book to return
          required: true
          schema:
            format: uuid
            type: string
      responses:
        '204':
          description: successful operation
  /logs:
    get:
      tags:
        - log
      summary: Render all logs
      description: Show all logs from database
      operationId: renderAllLogs
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LogModel'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Book not found
        '405':
          description: Validation exception
    post:
      tags:
        - log
      summary: Add a new log to the database
      description: Add a new log to the database
      operationId: addLog
      requestBody:
        description: Create a new log in the database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewLogModel'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogModel'
        '405':
          description: Invalid input

components:
  schemas:
    NewBookModel:
      type: object
      properties:
        title:
          description: Title of book entity
          type: string
          example: 'Cat Among the Pigeons'
        isbn:
          description: ISBN number of the book (13 characters)
          type: number
          example: 9780671557003
        genre:
          description: Genre of the book entity
          type: string
          example: DETECTIVE_FICTION
          enum:
            - DETECTIVE_FICTION
            - NOVEL
            - MYSTERY
            - THRILLER
            - HORROR
            - HISTORICAL
            - ROMANCE
            - WESTERN
            - BILDUNGSROMAN
            - SCIENCE_FICTION
            - FICTION
            - FANTASY
            - MAGICAL_REALISM
            - REALIST_LITERATURE
            - OTHER
          required:
            - title
            - isbn
            - genre
    BookModel:
      type: object
      properties:
        id:
          description: Id of book entity
          type: string
          format: uuid
          example: '3a8ea9f1-1a95-4caf-932f-2f988052933b'
        createdBy:
          description: User id who created book entity
          type: string
          format: uuid
          example: '3a8ea9f1-1a95-4caf-932f-2f988052933b'
        updatedBy:
          description: User id who updated book entity
          type: string
          format: uuid
          example: '3a8ea9f1-1a95-4caf-932f-2f988052933b'
        createdAt:
          description: Creation time of book entity
          type: string
          format: timestamp
          example: '2019-01-21T05:47:08.644'
        updatedAt:
          description: Updated time of book entity
          type: string
          format: timestamp
          example: '2019-01-21T05:47:08.644'
        title:
          description: Title of book entity
          type: string
          example: 'Cat Among the Pigeons'
        isbn:
          description: ISBN number of the book (13 characters)
          type: number
          example: 9780671557003
        genre:
          description: Genre of the book entity
          type: string
          example: DETECTIVE_FICTION
          enum:
            - DETECTIVE_FICTION
            - NOVEL
            - MYSTERY
            - THRILLER
            - HORROR
            - HISTORICAL
            - ROMANCE
            - WESTERN
            - BILDUNGSROMAN
            - SCIENCE_FICTION
            - FICTION
            - FANTASY
            - MAGICAL_REALISM
            - REALIST_LITERATURE
            - OTHER
        status:
          description: Status of the book
          type: string
          example: SOLD
          enum:
            - AVAILABLE
            - PENDING
            - SOLD
        availability:
          description: Status of book availability
          type: string
          example: AVAILABLE
          enum:
            - AVAILABLE
            - ARCHIVE
            - DELETED
    ModifiedBookModel:
      type: object
      properties:
        title:
          description: Title of book entity
          type: string
          example: 'Cat Among the Pigeons'
        isbn:
          description: ISBN number of the book (13 characters)
          type: number
          example: 9780671557003
        genre:
          description: Genre of the book entity
          type: string
          example: DETECTIVE_FICTION
          enum:
            - DETECTIVE_FICTION
            - NOVEL
            - MYSTERY
            - THRILLER
            - HORROR
            - HISTORICAL
            - ROMANCE
            - WESTERN
            - BILDUNGSROMAN
            - SCIENCE_FICTION
            - FICTION
            - FANTASY
            - MAGICAL_REALISM
            - REALIST_LITERATURE
            - OTHER
        status:
          description: Status of the book
          type: string
          example: SOLD
          enum:
            - AVAILABLE
            - PENDING
            - SOLD
        availability:
          description: Status of book availability
          type: string
          example: AVAILABLE
          enum:
            - AVAILABLE
            - ARCHIVE
            - DELETED
    NewLogModel:
      type: object
      properties:
        logMessage:
          description: Log message
          type: string
          example: "{ERROR_CODE_001=Book with id: 4bc34bbf-6278-4586-9e62-429bc41edcf5 was not found}"
          required:
            - logMessage
    LogModel:
      type: object
      properties:
        id:
          description: Id of log entity
          type: string
          format: uuid
          example: '3a8ea9f1-1a95-4caf-932f-2f988052933b'
        logMessage:
          description: Log message
          type: string
          example: "{ERROR_CODE_001=Book with id: 4bc34bbf-6278-4586-9e62-429bc41edcf5 was not found}"
        loggedAt:
          description: Creation time of log
          type: string
          format: timestamp
          example: '2019-01-21T05:47:08.644'